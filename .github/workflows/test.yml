name: Test and Coverage Report

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches: [main]

jobs:
  race-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16.9
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U user -d test_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgres://user:pass@localhost:5432/test_db?sslmode=disable

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      
      - name: Run tests with race detector and coverage
        run: |
          go test -race -covermode=atomic -coverprofile=coverage.txt ./...

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: coverage.txt

  code_coverage:
    name: Code coverage report
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: race-test
    permissions:
      contents: read
      actions: read
      pull-requests: write

    steps:
      - uses: fgrosse/go-coverage-report@v1.1.1
        with:
          coverage-artifact-name: code-coverage
          coverage-file-name: coverage.txt
